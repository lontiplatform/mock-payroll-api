{
    "output": [
        {
            "name": "response",
            "type": "model",
            "reference": "io.toro.mock.payroll.model.APIResponse",
            "gloopProperties": [
                {
                    "name": "deductions",
                    "type": "model",
                    "array": true,
                    "reference": "io.toro.mock.payroll.model.deduction.Deduction",
                    "gloopProperties": [
                        {
                            "name": "id"
                        }
                    ]
                }
            ]
        },
        {
            "name": "responseCode",
            "type": "integer"
        },
        {
            "name": "APIException",
            "type": "model",
            "reference": "io.toro.martini.api.APIException"
        }
    ],
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "type": "invokeGloop",
                    "comments": "fetch deductions from the database",
                    "name": "io.toro.mock.payroll.sql.deduction.SelectAllDeductions",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "deductionsCursor",
                                    "type": "model",
                                    "array": true,
                                    "gloopProperties": [
                                        {
                                            "name": "ID",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "NAME",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "DESCRIPTION",
                                            "required": true
                                        },
                                        {
                                            "name": "TYPE",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "APPLICABLE_TO",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "METHOD",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "AMOUNT",
                                            "type": "double",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "ENABLED",
                                            "type": "boolean",
                                            "required": true,
                                            "allowNull": false
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "selectAllDeductionsInputCursor"
                            ],
                            "to": [
                                "deductionsCursor"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "200",
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "SUCCESS",
                            "to": [
                                "response",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Deductions fetch successfully.",
                            "to": [
                                "response",
                                "message"
                            ]
                        }
                    ]
                },
                {
                    "type": "iterate",
                    "comments": "map cursor to output",
                    "input": {
                        "path": [
                            "deductionsCursor"
                        ]
                    },
                    "output": {
                        "path": [
                            "response",
                            "deductions"
                        ]
                    },
                    "children": [
                        {
                            "comments": "map data from cursor to output model",
                            "lines": [
                                {
                                    "from": [
                                        "deductionsCursor",
                                        "ID"
                                    ],
                                    "to": [
                                        "response",
                                        "deductions",
                                        "id"
                                    ]
                                },
                                {
                                    "from": [
                                        "deductionsCursor",
                                        "NAME"
                                    ],
                                    "to": [
                                        "response",
                                        "deductions",
                                        "name"
                                    ]
                                },
                                {
                                    "from": [
                                        "deductionsCursor",
                                        "DESCRIPTION"
                                    ],
                                    "to": [
                                        "response",
                                        "deductions",
                                        "description"
                                    ]
                                },
                                {
                                    "from": [
                                        "deductionsCursor",
                                        "TYPE"
                                    ],
                                    "to": [
                                        "response",
                                        "deductions",
                                        "type"
                                    ]
                                },
                                {
                                    "from": [
                                        "deductionsCursor",
                                        "APPLICABLE_TO"
                                    ],
                                    "to": [
                                        "response",
                                        "deductions",
                                        "applicableTo"
                                    ]
                                },
                                {
                                    "from": [
                                        "deductionsCursor",
                                        "METHOD"
                                    ],
                                    "to": [
                                        "response",
                                        "deductions",
                                        "method"
                                    ]
                                },
                                {
                                    "from": [
                                        "deductionsCursor",
                                        "AMOUNT"
                                    ],
                                    "to": [
                                        "response",
                                        "deductions",
                                        "amount"
                                    ]
                                },
                                {
                                    "from": [
                                        "deductionsCursor",
                                        "ENABLED"
                                    ],
                                    "to": [
                                        "response",
                                        "deductions",
                                        "enabled"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "comments": "log the exception received",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        }
                    ]
                },
                {
                    "comments": "map the appropriate error response",
                    "lines": [
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "ERROR",
                            "to": [
                                "APIException",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "APIException",
                                "httpErrorCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Encountered an exception while processing the request.",
                            "to": [
                                "APIException",
                                "message"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}